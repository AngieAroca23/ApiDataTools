@model AppDataTools.Models.Transporte
@{
    ViewBag.Title = "Home";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .nav-tabs {
        border-bottom: none;
        margin-bottom: 15px;
    }

    .nav .nav-item {
        width: 33%;
        /* border: 1px solid #ccc; */
        margin-bottom: 1px;
    }

        .nav .nav-item.active a {
            background: #5e72e4;
            color: #fff;
            border-radius: 4px;
            text-align: center;
        }

    .nav-tabs > li > a {
        margin-right: 2px;
        line-height: 1.42857143;
        border: 1px solid #dad8d8;
        border-radius: 4px;
        text-align: center;
    }

    .nav-tabs > li.active > a, .nav-tabs > li.active > a:focus, .nav-tabs > li.active > a:hover {
        color: #fff;
        cursor: default;
        background-color: #5e72e4;
        border-radius: 4px;
    }

    .nav-item:not(:last-child) {
        padding-right: 1rem;
    }

    .textb {
        background-color: #fff;
        background-image: none;
        border: 1px solid #ccc;
    }
</style>

<div class="panel panel-default">
    <div class="panel-heading">Formulario</div>
    <div class="panel-body">
        <div class="tab-content">
            <ul class="nav nav-tabs" role="tablist">
                <li class="nav-item active">
                    <a href="#saveEmpresas" role="tab" data-toggle="tab">
                        REGISTRAR EMPRESAS
                    </a>
                </li>
                <li class="nav-item">
                    <a href="#saveRepresentantes" role="tab" data-toggle="tab">
                        REGISTRAR REPRESENTANTE
                    </a>
                </li>
                <li class="nav-item">
                    <a href="#find" role="tab" data-toggle="tab">
                        CONSULTAR
                    </a>
                </li>
            </ul>
            <div class="tab-pane fade active in" id="saveEmpresas">
                @using (Html.BeginForm("CreateEmpresa", "Transporte", FormMethod.Post))
                {
                    <div class="row">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.NumeroDocumento, htmlAttributes: new { @class = "control-label" }, labelText: "Número Documento")
                            @Html.EditorFor(model => model.NumeroDocumento, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", @required = "@required" } })
                            @Html.ValidationMessageFor(model => model.NumeroDocumento, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.TipoDocumento, htmlAttributes: new { @class = "control-label" }, labelText: "Tipo Identificación")
                            @Html.DropDownList("TipoDocumento", null, "Seleccione Tipo Identificación", new { @class = "select2 form-control select2-single", @required = "@required" })
                            @Html.ValidationMessageFor(model => model.TipoDocumento, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.NombreCompleto, htmlAttributes: new { @class = "control-label" }, labelText: "Nombre Completo")
                            @Html.EditorFor(model => model.NombreCompleto, new { htmlAttributes = new { @class = "form-control", @maxlength = "500", @required = "@required" } })
                            @Html.ValidationMessageFor(model => model.NombreCompleto, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Direccion, htmlAttributes: new { @class = "control-label" }, labelText: "Dirección")
                            @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control", @maxlength = "150", @required = "@required" } })
                            @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Ciudad, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Ciudad, new { htmlAttributes = new { @class = "form-control", @maxlength = "50", @required = "@required" } })
                            @Html.ValidationMessageFor(model => model.Ciudad, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Departamento, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Departamento, new { htmlAttributes = new { @class = "form-control", @maxlength = "50", @required = "@required" } })
                            @Html.ValidationMessageFor(model => model.Departamento, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Pais, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Pais, new { htmlAttributes = new { @class = "form-control", @maxlength = "50", @required = "@required" } })
                            @Html.ValidationMessageFor(model => model.Pais, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control", @maxlength = "15", @required = "@required" } })
                            @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <form asp-controller="Transporte" asp-action="CreateEmpresa" method="post">
                        <p>
                            <br />
                            <input type="submit" value="Registrar" class="btn btn-primary" />
                        </p>
                    </form>
                }
            </div>
            <div class="tab-pane fade" id="saveRepresentantes">
                @using (Html.BeginForm("CreateRepresentante", "Transporte", FormMethod.Post))
                {
                <div class="row">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.NumeroDocumento, htmlAttributes: new { @class = "control-label" }, labelText: "Número Documento")
                        @Html.EditorFor(model => model.NumeroDocumento, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", @required = "@required" } })
                        @Html.ValidationMessageFor(model => model.NumeroDocumento, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-3">
                        @Html.LabelFor(model => model.TipoDocumento, htmlAttributes: new { @class = "control-label" }, labelText: "Tipo Identificación")
                        @Html.DropDownList("TipoDocumento", null, "Seleccione Tipo Identificación", new { @class = "select2 form-control select2-single", @required = "@required" })
                        @Html.ValidationMessageFor(model => model.TipoDocumento, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-3">
                        @Html.LabelFor(model => model.NombreCompleto, htmlAttributes: new { @class = "control-label" }, labelText: "Nombre Completo")
                        @Html.EditorFor(model => model.NombreCompleto, new { htmlAttributes = new { @class = "form-control", @maxlength = "500", @required = "@required" } })
                        @Html.ValidationMessageFor(model => model.NombreCompleto, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Direccion, htmlAttributes: new { @class = "control-label" }, labelText: "Dirección")
                        @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control", @maxlength = "150", @required = "@required" } })
                        @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Ciudad, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Ciudad, new { htmlAttributes = new { @class = "form-control", @maxlength = "50", @required = "@required" } })
                        @Html.ValidationMessageFor(model => model.Ciudad, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Departamento, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Departamento, new { htmlAttributes = new { @class = "form-control", @maxlength = "50", @required = "@required" } })
                        @Html.ValidationMessageFor(model => model.Departamento, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Pais, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Pais, new { htmlAttributes = new { @class = "form-control", @maxlength = "50", @required = "@required" } })
                        @Html.ValidationMessageFor(model => model.Pais, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control", @maxlength = "15", @required = "@required" } })
                        @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-3">
                        @Html.LabelFor(model => model.PlacaVehiculo, htmlAttributes: new { @class = "control-label" }, labelText: "Placa Vehiculo")
                        @Html.EditorFor(model => model.PlacaVehiculo, new { htmlAttributes = new { @class = "form-control", @maxlength = "15", @required = "@required" } })
                        @Html.ValidationMessageFor(model => model.PlacaVehiculo, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-3">
                        @Html.LabelFor(model => model.NumeroDocumentoEmp, htmlAttributes: new { @class = "control-label" }, labelText: "Empresa")
                        @Html.DropDownList("NumeroDocumentoEmp", null, "Seleccione una Empresa", new { @class = "select2 form-control select2-single", @required = "@required" })
                        @Html.ValidationMessageFor(model => model.NumeroDocumentoEmp, "", new { @class = "text-danger" })
                    </div>
                </div>

                    <form asp-controller="Transporte" asp-action="CreateEmpresa" method="post">
                        <p>
                            <br />
                            <input type="submit" value="Registrar" class="btn btn-primary" />
                        </p>
                    </form>
                }
            </div>
            <div class="tab-pane fade" id="find">
                <table class="table table-striped  table-hover">
                    <tr>
                        <th>
                            Placa
                        </th>
                        <th>
                            Tipo Identificacion
                        </th>
                        <th>
                            Nro Documento Empresa
                        </th>
                        <th>
                            Nombre Empresa
                        </th>
                        <th>
                            Cantidad Conductores
                        </th>
                    </tr>

                    @foreach (var item in ViewData["EmpresaList"] as IEnumerable<AppDataTools.Models.Transporte>)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.PlacaVehiculo)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TipoIdentificacionEmpresa)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.NumeroDocumento)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.NombreCompleto)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Cantidad)
                            </td>
                        </tr>
                    }

                </table>
            </div>
        </div>
    </div>
</div>



